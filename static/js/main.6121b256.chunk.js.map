{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","handleChange2","e","setState","searchField","target","value","state","bind","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4UAIaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCNXC,EAAW,SAACR,GAEvB,OADAS,QAAQC,IAAIV,GAEV,qBAAKC,UAAU,YAAf,SACGD,EAAMW,SAASC,KAAI,SAACR,GACnB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,U,MCPnB,SAASQ,EAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC/C,OACE,8BACE,uBACIC,KAAK,SACLf,UAAU,SACVa,YAAaA,EACbG,SAAUF,M,ICsCLG,E,kDAzCb,aAAe,IAAD,8BACZ,gBAqBFC,cAAgB,SAAAC,GACd,EAAKC,SAAS,CAAEC,YAAcF,EAAEG,OAAOC,SApBvC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAGf,EAAKP,aAAe,EAAKA,aAAaW,KAAlB,gBARR,E,qDAWd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKV,SAAS,CAAEV,SAAUoB,S,0BAG/C,SAAaX,GACXY,KAAKX,SAAS,CAAEC,YAAcF,EAAEG,OAAOC,U,oBAQzC,WACE,MAAkCQ,KAAKP,MAA/Bd,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,YACZW,EAAmBtB,EAASuB,QAAO,SAAA9B,GAAO,OAC9CA,EAAQE,KAAK6B,cAAcC,SAASd,EAAYa,kBAElD,OACE,sBAAKlC,UAAU,MAAf,UACE,iDACA,cAACY,EAAD,CAAWC,YAAY,iBAAiBC,aAAciB,KAAKb,gBAC3D,cAAC,EAAD,CAAUR,SAAUsB,W,GApCVI,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6121b256.chunk.js","sourcesContent":["import './card.styles.css';\n\nimport React from 'react';\n\nexport const Card = (props) => {  \n  return (\n    <div className=\"card-container\">\n      <img\n        alt=\"monster\"\n        src={`https://robohash.org/${props.monster.id}?set=set4&size=180x180`}\n      />\n      <h2>{props.monster.name}</h2>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n};\n","import './card-list.styles.css';\n\nimport React from 'react';\n\nimport { Card } from '../card/card.component';\n\nexport const CardList = (props) => {\n  console.log(props);\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((monster) => {\n        return <Card key={monster.id} monster={monster} />;\n      })}\n    </div>\n  );\n};\n","import './search-box.styles.css';\n\nimport React from 'react';\n\nexport default function SearchBox({ placeholder, handleChange }) {\n  return (\n    <div>\n      <input\n          type=\"search\"\n          className=\"search\"\n          placeholder={placeholder}\n          onChange={handleChange}\n        />\n    </div>\n  )\n}\n","import './App.css';\n\nimport React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange(e) {\n    this.setState({ searchField : e.target.value })\n  }\n\n  // Arrow function automatically bind the context where it's defined\n  handleChange2 = e => {\n    this.setState({ searchField : e.target.value })\n  }\n\n  render() {\n    const { monsters, searchField } = this.state\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    \n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox placeholder=\"search monster\" handleChange={this.handleChange2} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}